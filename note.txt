GHI CHÉP TRONG BÀI	

=== ===styled component=== ===
- thư viện giúp quản lý css của component, 
- thêm css cho class bên trong, kiểu như sass


=== ===Sử dụng index.js import pages=== ===
import tất cả các component vào 1 file index.js, và export.
vd: export {Home}
==>  import {Home} from "./pages"


=== ===Router=== ===
- Thẻ router ở ngoài cùng, trong sẽ là Switch sẽ ôm các component thay đổi, Các component được thay đổi theo link sẽ đc bọc trong thẻ Route,
- Component nào không thay đổi khi các component khách thay đổi (NavBar) sẽ ở ngoài Switch
- thẻ Route có thuộc tính path="/" để phân biệt
- path="/:id" truyên dynamic sẽ được nhận trong component children bằng hook useParam
- tại phần click để thay đổi component, sẽ ở trong thẻ Link, thuộc to="/" bên trong sẽ khớp với path="/" trong thẻ Route đã được sử dụng bên trên, khi click sẽ đi đên component tương ứng khi path và to giống nhau



=== ===NavBar=== ===
- luư các nav và link ở file constants thành array links


=== ===Context=== ===
Nếu không có context, muốn truyền dữ liệu phải truyền từ cha xuống con, qua nhiều component có những component không sử dụng đến dữ liệu đó => "prop drilling"

- khởi tạo Context object, sử dụng createContext
- tạo h, hay component để cung cấp context vừa tạo. component này sẽ là cha của các component cần sử dụng state trong ứng dụng.
	+ bên trong return 
	<{Context Object vừa tạo}.Provider  value={{data}}> 
	{children}
	<{Context Object vừa tạo}.Provider />

- import component context phía trên vào index.js và wrap vào <App />

- sử dụng data trong context: sử dụng hook useContext để lấy data trong context, truyền vào tên context tương ứng nếu có nhiều context

- trong bài này: export hàm provider và hàm use...Context đã sử dụng useContext của provider này. => không cần nhớ tên context object, useContext, mà sử dụng luôn hàm use...Context để lấy data



=== === useReducer === ===
- reducer là hàm gồm hai tham số state, action => trả về new state khi thực hiện một action 
	+ trong hàm thường sẽ check action.type sau đó thực hiện các khối lệnh để thay đổi state theo từng case action.type

- useReducer hook sử dụng khi component có state phức tạp, nhiều action type làm thay đổi state.
	+ useReducer nhận vào reducer và initialState(một hoạc nhiều state) => trả về state hiện tại và dispatch function dùng để trigger 1 action
	const [state, dispatch] = useReducer(reducer, { initialState });

	+ khi có function nào đó cần thay đổi state: thực hiện dispatch type để sử dụng action.type bên trên.

	const handleClick = () => {
    dispatch({ type: "ACTION_TYPE" });
  };


- Có một file để quản lý action.type: action.js
- File context: các component context chức năng: gọi api, lấy dữ liệu, gửi dữ liệu, gửi function để dispatch
- File reducer: thực hiện hàm reducer theo các dispatch



context
|- products_context.js
		{
			<ProductsContext.Provider value={{...state, các hàm thực hiện dispatch và các hàm khác}}>
      {children}
    	</ProductsContext.Provider>

			const [state, dispatch] = useReducer(reducer, { initialState });

			=> reducer được gọi từ products_reducer.js, initialState được khởi tạo tại file này
			=> có các function tạo các dispatch các action.type
			=> dispatch các action và gửi kèm payload

			
			export const useProductsContext = () => {
  			return useContext(ProductsContext);
			}; => custom hook sử dụng useContext để lấy dữ liệu luôn
		}


reducers
|-products_reducer.js
		{
			Quản lý, thực hiện các reducer theo theo các action
		}


action.js
	{
		định nghĩa và quản lý tên các action
	}


components
|-Sidebar.js
	{
		const data = useProductsContext(); => lấy state và các hàm truyền từ value của provider

		sử dụng các state và hàm vào jsx tạo sự kiện
	}



=== === API === ===
- lấy dữ liệu về từ api, dùng thư viện axios, API url được lưu ở file constants để dễ quản lý


=== === helper === ===
- xây dựng hàm hỗ trợ định dạng cách hiển thị giá tiền


=== === filter context, filter reducer === ===
- context chịu trách nhiệm lưu trữ và quản lý dữ liệu về lọc danh sách sản phẩm, khai báo hàm dispatch lọc sản phẩm theo các yêu cầu